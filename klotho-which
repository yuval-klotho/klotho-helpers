#!/bin/bash
set -euo pipefail
cd "$(dirname "$0")"

versions_dir=klotho-versions
mkdir -p "$versions_dir"

function klotho_ln() {
    klotho_path="$1"
    klotho_desc="$2"
    rm -f klotho
    if [[ "$klotho_path" == '/'* ]]; then
      full_path="$klotho_path"
    else
      full_path="$versions_dir/$1"
    fi
    ln -s "$full_path" klotho 
    echo "$klotho_desc" > active-version.txt
}

function klotho_version() {
  klotho_cmd="${1:-./klotho}"
  "$klotho_cmd" --version 2>&1 >/dev/null | cut -d' ' -f2

}

case "${1:-which}" in
  --version)
    if [[ ! -e klotho ]]; then
      echo "No klotho-which'ed klotho installed. See \"klotho-which help\""
      exit 1
    fi
    ONLY_PRINT_GIT_INFO=true klotho_version
    ;;
  brew)
    klotho_ln /opt/homebrew/bin/klotho brew
    ;;
  local/dev)
    klotho_ln run-local local/dev
    ;;
  release)
    if [[ "${2:-}" == latest || ! -f "$versions_dir/release" ]]; then
      [[ -f "$versions_dir/release" ]] && rm "$versions_dir/release"
      echo 
      printf 'Downloading latest klotho... '
      curl -fsSL "http://srv.klo.dev/update/latest/darwin/$(uname -m)" -o "$versions_dir/release"
      printf 'OK\n'
      chmod +x "$versions_dir/release"
    fi
    klotho_ln release "release ($(klotho_version "$versions_dir/release"))"
    ;;
  which)
    if [[ -e active-version.txt ]]; then
      cat active-version.txt
    else
      echo >&2 'klotho not set up'
      exit 1
    fi
    ;;
  help)
    echo 'Provide "local/dev" or "release [latest]"'.
    echo 'You can also use just --version (without the positional arg) to print the active'
    echo "klotho's version, in a succinct format suitable for turning into file/dir paths."
    exit 1
    ;;
  *)
    echo "unrecognized option: $@"
    echo 'provide "local/dev" or "release"'
    exit 1
esac
